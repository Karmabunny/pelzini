<?php
/*
Copyright 2008 Josh Heidenreich

This file is part of docu.

Docu is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Docu is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with docu.  If not, see <http://www.gnu.org/licenses/>.
*/


/**
* @package Outputters
* @author Josh
* @since 0.1
**/

/**
* Outputs the tree to a PostgreSQL database
**/
class PostgreOutputter extends DatabaseOutputter {
  private $username;
  private $password;
  private $server;
  private $database;
  private $db;
  
  /**
  * Connects to the db
  */
  public function __construct ($username, $password, $server, $database) {
    $this->username = $username;
    $this->password = $password;
    $this->server = $server;
    $this->database = $database;
  }
  
  /**
  * Closes connection to the db
  */
  public function __destruct () {
    if ($this->db) mysql_close ($this->db);
  }
  
  
  
  /**
  * Connects to the MySQL database
  **/
  protected function connect () {
    $connect = '';
    if (isset($this->server)) $connect .= "host='{$this->server}' ";
    if (isset($this->username)) $connect .= "user='{$this->username}' ";
    if (isset($this->password)) $connect .= "password='{$this->password}' ";
    if (isset($this->database)) $connect .= "dbname='{$this->database}' ";
    
    echo "<pre>{$connect}</pre>";
    $this->db = pg_connect($connect);
    if ($this->db == false) return false;
    return true;
  }
  
  /**
  * Executes a MySQL query
  */
  protected function query ($query) {
    $return = pg_query ($query);
    if ($return === false) {
      echo "<p>Error in query <em>{$query}</em>. PostgreSQL reported the following: <em>" . pg_last_error() . "</em></p>";
    }
    return $return;
  }
  
  /**
  * Safens some input
  * @param string $input The input to safen
  **/
  protected function sql_safen ($input) {
    if ($input === null) {
      return 'NULL';
    } else if (is_integer ($input)) {
      return $input;
    } else {
      return "'" . pg_escape_string($input) . "'";
    }
  }
  
  /**
  * Fetches a row from the database (numerical)
  **/
  protected function fetch_row ($res) {
    return pg_fetch_row ($res);
  }
  
  /**
  * Fetches a row from the database (assoc)
  **/
  protected function fetch_assoc ($res) {
    return pg_fetch_assoc ($res);
  }
  
  /**
  * Returns the number of rows affected in the last query
  **/
  protected function affected_rows () {
    return pg_affected_rows();
  }
  
  /**
  * Returns the autogenerated id created in the last query
  **/
  protected function insert_id () {
    // TODO
  }
}

?>
